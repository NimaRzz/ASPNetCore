// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Infra.Data.Contexts;

#nullable disable

namespace Project.Infra.Data.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20241120105916_Fix3")]
    partial class Fix3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Domain.Entities.Citizens.Citizen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HouseholdCode")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("PassportCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonalizedCode")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("UniqueCode")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.Office", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProvinceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.OfficePlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("OfficeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("PlanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WorkEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("WorkStart")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PlanId");

                    b.ToTable("OfficePlans");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.Shift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("WorkCalendarId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WorkCalendarId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.WorkCalendar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Holidays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("OfficeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("WorkCalendars");
                });

            modelBuilder.Entity("Project.Domain.Entities.Plans.Plan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Project.Domain.Entities.Province.Province", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6301),
                            IsRemoved = false,
                            Name = "AzarbaijanSharghi"
                        },
                        new
                        {
                            Id = 2L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6332),
                            IsRemoved = false,
                            Name = "AzarbaijanGharbi"
                        },
                        new
                        {
                            Id = 3L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6378),
                            IsRemoved = false,
                            Name = "Ardabil"
                        },
                        new
                        {
                            Id = 4L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6389),
                            IsRemoved = false,
                            Name = "Isfahan"
                        },
                        new
                        {
                            Id = 5L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6399),
                            IsRemoved = false,
                            Name = "Alborz"
                        },
                        new
                        {
                            Id = 6L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6411),
                            IsRemoved = false,
                            Name = "Ilam"
                        },
                        new
                        {
                            Id = 7L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6422),
                            IsRemoved = false,
                            Name = "Bushehr"
                        },
                        new
                        {
                            Id = 8L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6431),
                            IsRemoved = false,
                            Name = "Tehran"
                        },
                        new
                        {
                            Id = 9L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6441),
                            IsRemoved = false,
                            Name = "ChaharmahaloBakhtiari"
                        },
                        new
                        {
                            Id = 10L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6451),
                            IsRemoved = false,
                            Name = "KhorasanJonubi"
                        },
                        new
                        {
                            Id = 11L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6461),
                            IsRemoved = false,
                            Name = "KhorasanRazavi"
                        },
                        new
                        {
                            Id = 12L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6471),
                            IsRemoved = false,
                            Name = "KhorasanShomali"
                        },
                        new
                        {
                            Id = 13L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6481),
                            IsRemoved = false,
                            Name = "Khuzestan"
                        },
                        new
                        {
                            Id = 14L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6490),
                            IsRemoved = false,
                            Name = "Zanjan"
                        },
                        new
                        {
                            Id = 15L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6500),
                            IsRemoved = false,
                            Name = "Semnan"
                        },
                        new
                        {
                            Id = 16L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6509),
                            IsRemoved = false,
                            Name = "SistanoBaluchestan"
                        },
                        new
                        {
                            Id = 17L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6519),
                            IsRemoved = false,
                            Name = "Fars"
                        },
                        new
                        {
                            Id = 18L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6530),
                            IsRemoved = false,
                            Name = "Qazvin"
                        },
                        new
                        {
                            Id = 19L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6539),
                            IsRemoved = false,
                            Name = "Qom"
                        },
                        new
                        {
                            Id = 20L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6549),
                            IsRemoved = false,
                            Name = "Kurdistan"
                        },
                        new
                        {
                            Id = 21L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6558),
                            IsRemoved = false,
                            Name = "Kerman"
                        },
                        new
                        {
                            Id = 22L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6567),
                            IsRemoved = false,
                            Name = "Kermanshah"
                        },
                        new
                        {
                            Id = 23L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6576),
                            IsRemoved = false,
                            Name = "KohgiluyehoBoyerahmad"
                        },
                        new
                        {
                            Id = 24L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6586),
                            IsRemoved = false,
                            Name = "Golestan"
                        },
                        new
                        {
                            Id = 25L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6596),
                            IsRemoved = false,
                            Name = "Gilan"
                        },
                        new
                        {
                            Id = 26L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6655),
                            IsRemoved = false,
                            Name = "Lorestan"
                        },
                        new
                        {
                            Id = 27L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6667),
                            IsRemoved = false,
                            Name = "Mazandaran"
                        },
                        new
                        {
                            Id = 28L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6677),
                            IsRemoved = false,
                            Name = "Markazi"
                        },
                        new
                        {
                            Id = 29L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6687),
                            IsRemoved = false,
                            Name = "Hormozgan"
                        },
                        new
                        {
                            Id = 30L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6696),
                            IsRemoved = false,
                            Name = "Hamadan"
                        },
                        new
                        {
                            Id = 31L,
                            InsertTime = new DateTime(2024, 11, 20, 14, 29, 16, 102, DateTimeKind.Local).AddTicks(6706),
                            IsRemoved = false,
                            Name = "Yazd"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Turns.Appointment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CitizenId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long>("PlanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CitizenId");

                    b.HasIndex("PlanId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Project.Domain.Entities.Users.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsRemoved = false,
                            Name = "Citizen"
                        },
                        new
                        {
                            Id = 2L,
                            IsRemoved = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3L,
                            IsRemoved = false,
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project.Domain.Entities.Users.UserInRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemoveTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInRole");
                });

            modelBuilder.Entity("Project.Domain.Entities.Citizens.Citizen", b =>
                {
                    b.HasOne("Project.Domain.Entities.Offices.Office", "Office")
                        .WithMany("Citizens")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.Office", b =>
                {
                    b.HasOne("Project.Domain.Entities.Province.Province", "Province")
                        .WithMany("Offices")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.OfficePlan", b =>
                {
                    b.HasOne("Project.Domain.Entities.Offices.Office", "Office")
                        .WithMany("OfficePlans")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Domain.Entities.Plans.Plan", "Plan")
                        .WithMany("OfficePlans")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.Shift", b =>
                {
                    b.HasOne("Project.Domain.Entities.Offices.WorkCalendar", "WorkCalendar")
                        .WithMany("Shifts")
                        .HasForeignKey("WorkCalendarId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkCalendar");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.WorkCalendar", b =>
                {
                    b.HasOne("Project.Domain.Entities.Offices.Office", "Office")
                        .WithMany("WorkCalendars")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Project.Domain.Entities.Turns.Appointment", b =>
                {
                    b.HasOne("Project.Domain.Entities.Citizens.Citizen", "Citizen")
                        .WithMany("Appointments")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Domain.Entities.Plans.Plan", "Plan")
                        .WithMany("Appointments")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizen");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Project.Domain.Entities.Users.UserInRole", b =>
                {
                    b.HasOne("Project.Domain.Entities.Users.Role", "Role")
                        .WithMany("UserInRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Domain.Entities.Users.User", "User")
                        .WithMany("UserInRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Domain.Entities.Citizens.Citizen", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.Office", b =>
                {
                    b.Navigation("Citizens");

                    b.Navigation("OfficePlans");

                    b.Navigation("WorkCalendars");
                });

            modelBuilder.Entity("Project.Domain.Entities.Offices.WorkCalendar", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("Project.Domain.Entities.Plans.Plan", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("OfficePlans");
                });

            modelBuilder.Entity("Project.Domain.Entities.Province.Province", b =>
                {
                    b.Navigation("Offices");
                });

            modelBuilder.Entity("Project.Domain.Entities.Users.Role", b =>
                {
                    b.Navigation("UserInRoles");
                });

            modelBuilder.Entity("Project.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("UserInRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
